{"version":3,"sources":["actions/index.js","components/TodoItem.js","components/TodoList.js","components/App.js","reducers/index.js","index.js"],"names":["deleteTodo","title","type","payload","TodoItem","closeTodo","props","className","this","task","style","cursor","position","top","left","onClick","React","Component","connect","state","todoList","TodoList","newTitle","newTask","onFormSubmit","e","preventDefault","createTodo","setState","onTitleChange","target","value","onDescriptionChange","key","onSubmit","maxWidth","margin","onChange","marginTop","map","todo","console","log","App","combineReducers","action","filter","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"4PAYaA,EAAa,SAACC,GACzB,MAAO,CACLC,KAAM,cACNC,QAAS,CACPF,MAAOA,KCZPG,E,4MACJC,UAAY,WACV,EAAKC,MAAMN,WAAW,EAAKM,MAAML,Q,uDAGjC,OACE,yBAAKM,UAAU,sCACb,4BAAKC,KAAKF,MAAML,OAChB,2BAAIO,KAAKF,MAAMG,MAEf,uBACEF,UAAU,gBACVG,MAAO,CACLC,OAAQ,UACRC,SAAU,WACVC,IAAK,MACLC,KAAM,OAERC,QAASP,KAAKH,iB,GAlBDW,IAAMC,WA6BdC,eAJS,SAACC,GACvB,MAAO,CAAEC,SAAUD,EAAMC,YAGa,CAAEpB,cAA3BkB,CAAyCd,GCzBlDiB,E,4MACJF,MAAQ,CAAEG,SAAU,GAAIC,QAAS,I,EAEjCC,aAAe,SAACC,GACdA,EAAEC,iBACyB,KAAvB,EAAKP,MAAMI,SAA0C,KAAxB,EAAKJ,MAAMG,WAC1C,EAAKhB,MAAMqB,WAAW,EAAKR,MAAMG,SAAU,EAAKH,MAAMI,SACtD,EAAKK,SAAS,CAAEN,SAAU,GAAIC,QAAS,O,EAG3CM,cAAgB,SAACJ,GACf,EAAKG,SAAS,CAAEN,SAAUG,EAAEK,OAAOC,S,EAErCC,oBAAsB,SAACP,GACrB,EAAKG,SAAS,CAAEL,QAASE,EAAEK,OAAOC,S,uDAGlC,IAAIE,EAAM,EACV,OACE,6BACE,wBAAI1B,UAAU,sCAAd,+BAGA,0BACE2B,SAAU1B,KAAKgB,aACfjB,UAAU,WACVG,MAAO,CAAEyB,SAAU,QAASC,OAAQ,SAEpC,yBAAK7B,UAAU,SACb,2DACA,2BACEL,KAAK,OACL6B,MAAOvB,KAAKW,MAAMG,SAClBe,SAAU7B,KAAKqB,iBAGnB,yBAAKtB,UAAU,SACb,8CACA,8BACEwB,MAAOvB,KAAKW,MAAMI,QAClBc,SAAU7B,KAAKwB,uBAGnB,4BAAQzB,UAAU,YAAYL,KAAK,UAAnC,aAIF,yBACEK,UAAU,aACVG,MAAO,CAAEyB,SAAU,QAASC,OAAQ,OAAQE,UAAW,QAEtD9B,KAAKF,MAAMc,SAASmB,KAAI,SAACC,GAExB,OADAP,IACO,kBAAC,EAAD,CAAUA,IAAKA,EAAKhC,MAAOuC,EAAKvC,MAAOQ,KAAM+B,EAAK/B,gB,GArD9CO,IAAMC,WAkEdC,eALS,SAACC,GAEvB,OADAsB,QAAQC,IAAIvB,GACL,CAAEC,SAAUD,EAAMC,YAGa,CAAEO,WFxEhB,SAAC1B,EAAOQ,GAChC,MAAO,CACLP,KAAM,cACNC,QAAS,CACPF,MAAOA,EACPQ,KAAMA,KEmE0CT,cAAvCkB,CAAqDG,GC5DrDsB,E,uKARX,OACE,yBAAKpC,UAAU,gBACb,kBAAC,EAAD,W,GAJUS,IAAMC,W,QCeT2B,cAAgB,CAC7BxB,SAhB6B,WAA4B,IAA3BA,EAA0B,uDAAf,GAAIyB,EAAW,uCACxD,MAAoB,gBAAhBA,EAAO3C,KACH,GAAN,mBAAWkB,GAAX,CAAqByB,EAAO1C,UAEV,gBAAhB0C,EAAO3C,KACFkB,EAAS0B,QAAO,SAACN,GACtB,OAAIA,EAAKvC,QAAU4C,EAAO1C,QAAQF,MACzBuC,EAEF,QAGJpB,KCPT2B,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IAC3B,kBAAC,EAAD,OAGFC,SAASC,cAAc,Y","file":"static/js/main.283c5efe.chunk.js","sourcesContent":["//Action creators\r\n\r\nexport const createTodo = (title, task) => {\r\n  return {\r\n    type: \"CREATE_TODO\",\r\n    payload: {\r\n      title: title,\r\n      task: task,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteTodo = (title) => {\r\n  return {\r\n    type: \"DELETE_TODO\",\r\n    payload: {\r\n      title: title,\r\n    },\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteTodo } from \"../actions\";\r\n\r\nclass TodoItem extends React.Component {\r\n  closeTodo = () => {\r\n    this.props.deleteTodo(this.props.title);\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"ui segment center aligned inverted\">\r\n        <h1>{this.props.title}</h1>\r\n        <p>{this.props.task}</p>\r\n\r\n        <i\r\n          className=\"ui close icon\"\r\n          style={{\r\n            cursor: \"pointer\",\r\n            position: \"absolute\",\r\n            top: \"5px\",\r\n            left: \"5px\",\r\n          }}\r\n          onClick={this.closeTodo}\r\n        ></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { todoList: state.todoList };\r\n};\r\n\r\nexport default connect(mapStateToProps, { deleteTodo })(TodoItem);\r\n","import React from \"react\";\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { createTodo } from \"../actions\";\r\nimport { deleteTodo } from \"../actions\";\r\n//Components\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass TodoList extends React.Component {\r\n  state = { newTitle: \"\", newTask: \"\" };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.newTask !== \"\" && this.state.newTitle !== \"\") {\r\n      this.props.createTodo(this.state.newTitle, this.state.newTask);\r\n      this.setState({ newTitle: \"\", newTask: \"\" });\r\n    }\r\n  };\r\n  onTitleChange = (e) => {\r\n    this.setState({ newTitle: e.target.value });\r\n  };\r\n  onDescriptionChange = (e) => {\r\n    this.setState({ newTask: e.target.value });\r\n  };\r\n  render() {\r\n    let key = 0;\r\n    return (\r\n      <div>\r\n        <h1 className=\"ui segment center aligned inverted\">\r\n          TodoList with React & Redux\r\n        </h1>\r\n        <form\r\n          onSubmit={this.onFormSubmit}\r\n          className=\"ui form \"\r\n          style={{ maxWidth: \"500px\", margin: \"auto\" }}\r\n        >\r\n          <div className=\"field\">\r\n            <label>What are you going to do</label>\r\n            <input\r\n              type=\"text\"\r\n              value={this.state.newTitle}\r\n              onChange={this.onTitleChange}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label>Description</label>\r\n            <textarea\r\n              value={this.state.newTask}\r\n              onChange={this.onDescriptionChange}\r\n            ></textarea>\r\n          </div>\r\n          <button className=\"ui button\" type=\"submit\">\r\n            Add todo\r\n          </button>\r\n        </form>\r\n        <div\r\n          className=\"ui segment\"\r\n          style={{ maxWidth: \"500px\", margin: \"auto\", marginTop: \"3vh\" }}\r\n        >\r\n          {this.props.todoList.map((todo) => {\r\n            key++;\r\n            return <TodoItem key={key} title={todo.title} task={todo.task} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return { todoList: state.todoList };\r\n};\r\n\r\nexport default connect(mapStateToProps, { createTodo, deleteTodo })(TodoList);\r\n","import React from \"react\";\r\n//Components\r\nimport TodoList from \"./TodoList\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\">\r\n        <TodoList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\n\r\n// Redux reducers\r\n\r\nexport const todoListReducer = (todoList = [], action) => {\r\n  if (action.type === \"CREATE_TODO\") {\r\n    return [...todoList, action.payload];\r\n  }\r\n  if (action.type === \"DELETE_TODO\") {\r\n    return todoList.filter((todo) => {\r\n      if (todo.title !== action.payload.title) {\r\n        return todo;\r\n      }\r\n      return null;\r\n    });\r\n  }\r\n  return todoList;\r\n};\r\n\r\nexport default combineReducers({\r\n  todoList: todoListReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers\";\n\nReactDOM.render(\n  <Provider store={createStore(reducers)}>\n    <App />\n  </Provider>,\n\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}